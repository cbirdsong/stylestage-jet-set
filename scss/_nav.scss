nav {
	display: flex;
	flex-flow: column nowrap;
	align-items: center;
	justify-content: center;
	text-align: center;

	padding: 3rem 1rem;

	--link-color: var(--black);
	--link-color--hover: var(--red);
	--link-color--active: var(--green-neon);
	--link-color--focus: var(--yellow-neon);

	&:before,
	&:after {
		content: "Style Stage";
		display: block;

		@include logo-type-style();

		writing-mode: vertical-rl;
		text-orientation: mixed;
		font-size: 8vh;

		position: absolute;
		right: calc(50% - 4vh);

		@media (min-width: $breakpoint-md) {
			position: fixed;
			top: 5vh;
			bottom: 5vh;
			right: 2.5vw;
		}

		isolation: isolate;
		mix-blend-mode: color-dodge;
		filter: contrast(0.5) brightness(0.5) opacity(0.25);

		animation-name: beat;
		animation-duration: calc(var(--beat-interval));
		animation-timing-function: cubic-bezier(0.31, 0.37, 1, 1.65);
		animation-iteration-count: infinite;
	}

	&::before {
		-webkit-text-fill-color: var(--black);
	}
	&::after {
		-webkit-text-stroke-width: 0.33em;
		-webkit-text-stroke-color: var(--black);
	}
}

nav ul {
	display: flex;
	flex-flow: row wrap;
	align-items: center;
	justify-content: space-around;
	justify-content: space-evenly;
	list-style-type: none;

	width: 100%;
	padding: 0;
	margin: 0;

	@supports (display: grid) {
		position: sticky;

		> * {
			flex-basis: 50%;
			margin-top: 2vw;
			margin-bottom: 2vw;

			&:nth-child(4n + 1) {
				margin-right: -5vw;
			}
			&:nth-child(4n + 2) {
				margin-left: -5vw;
			}
		}

		@media (min-width: $breakpoint-md) {
			top: 10vh;
			bottom: 10vh;
			min-height: 80vh;

			flex-flow: column nowrap;

			> *,
			> *:nth-child(n) {
				flex-basis: auto;
				margin: 0.25rem;
			}
		}
	}
}

nav li {
	position: sticky;

	display: inline-flex;
	align-items: center;
	justify-content: center;

	--translateX: 0rem;
	--skewX: 0deg;
	--skewY: 0deg;
	--rotateX: 0deg;
	--rotateY: 0deg;

	--border-top-width: 0.125rem;
	--border-left-width: 0.125rem;
	--border-bottom-width: 0.125rem;
	--border-right-width: 0.125rem;
	--background-color: white;

	transform: translateX(var(--translateX)) skewX(var(--skewX)) skewY(var(--skewY)) rotateX(var(--rotateX))
		rotateY(var(--rotateY));
	transform-origin: var(--originX) var(--originY);

	a {
		position: relative;
		display: inline-block;
		padding: 1em;

		text-shadow: none;
		filter: none;

		text-decoration: none;

		&:hover,
		&:focus,
		&:active {
			@include ridiculous-text-shadow($width1: 2px, $width2: 3px, $color1: var(--white), $color2: var(--white));
			@supports (-webkit-text-fill-color: var(--white)) {
				-webkit-text-fill-color: var(--white);
				@include ridiculous-text-shadow($width1: 2px, $width2: 3px, $color1: var(--black), $color2: var(--black));
			}
		}
		&:focus {
		}
		&:active {
		}

		&::before,
		&::after {
			content: "";
			display: inline-block;
			position: absolute;
			z-index: -1;
			top: 0;
			bottom: 0;
			left: 0;
			right: 0;
			background-color: var(--background-color);

			outline: 0.125rem solid var(--link-color);
			@supports (filter: drop-shadow(0 0 0 var(--link-color))) {
				outline-width: 0;

				filter: drop-shadow(0 var(--border-top-width) 0 var(--link-color))
					drop-shadow(var(--border-right-width) 0 0 var(--link-color))
					drop-shadow(0 calc(var(--border-bottom-width) * -1) 0 var(--link-color))
					drop-shadow(calc(var(--border-left-width) * -1) 0 0 var(--link-color));
			}
			--translateX: 0rem;
			--skewX: 0deg;
			--skewY: 0deg;
			--rotateX: 0deg;
			--rotateY: 0deg;
		}
		&:before {
			visibility: visible;
		}
		&:after {
			visibility: hidden;
			animation-name: beat;
			animation-duration: calc(var(--beat-interval));
			animation-timing-function: cubic-bezier(0.31, 0.37, 1, 1.65);
			animation-iteration-count: infinite;
		}
		&:hover,
		&:focus,
		&:active {
			&:before {
				visibility: hidden;
			}
			&:after {
				visibility: visible;
				background-image: repeating-linear-gradient(
					var(--gradient-degrees),
					var(--gradient-color1) var(--gradient-size1),
					var(--gradient-color1) calc(var(--gradient-size2) * 2),
					var(--gradient-color2) calc(var(--gradient-size1) * 2),
					var(--gradient-color2) calc(var(--gradient-size2) * 4)
				);
			}
		}
	}

	$max: 12;
	$size1: 12px;
	$size2: 12px;

	@for $i from 1 through $max {
		&:nth-child(#{$i}n) {
			$h: $max - $i;
			$j: $max + $i;

			$p: ($max + $i) * 10;
			$z: ($max - $i) * 10;

			z-index: $z;
			perspective: $p;
			a {
				z-index: $z + 1;
			}

			top: calc(#{($i * 0.33) + "rem"} + 0.05vh);
			bottom: calc(#{($i * -0.33) + "rem"} + 0.05vh);

			@if $i % 6 == 0 {
				--gradient-degrees: #{$i * (11 - $i * 1.25) + "deg"};
				--gradient-size1: #{$size1 * 1.75};
				--gradient-size2: #{$size2 * 2.125};
				--gradient-color1: var(--teal);
				--gradient-color2: var(--blue-dark);
				--border-top-width: #{"0.1" + $i + "5" + "rem"};
				--translateX: #{$i * -0.0625 + "rem"};
				--skewX: #{$j * -0.4 + "deg"};
				--skewY: #{$i * -0.35 + "deg"};
				--rotateX: #{$h * 1.25 + "deg"};
				--rotateY: #{$h * 1.75 + "deg"};
				--originX: #{($h / 20) * 48 + "%"};
				--originY: #{($j / 20) * 52 + "%"};
			} @else if $i % 3 == 0 {
				--gradient-degrees: #{$i * (26 - $i * 2.33) + "deg"};
				--gradient-size1: #{$size1 * 0.25};
				--gradient-size2: #{$size2 * 1.625};
				--gradient-color1: var(--teal);
				--gradient-color2: var(--blue-dark);
				--border-bottom-width: #{"0.1" + $i + "5" + "rem"};
				--translateX: #{$i * -0.0385 + "rem"};
				--skewX: #{$h * 0.025 + "deg"};
				--skewY: #{$i * 0.75 + "deg"};
				--rotateX: #{$i * -1.33 + "deg"};
				--rotateY: #{$i * -1.475 + "deg"};
				--originX: #{($h / 20) * 48 + "%"};
				--originY: #{($j / 20) * 52 + "%"};
			} @else if $i % 2 == 0 {
				--gradient-degrees: #{$i * (43 - $i * 2.15) + "deg"};
				--gradient-size1: #{$size1 * 0.45};
				--gradient-size2: #{$size2 * 1.4};
				--gradient-color1: var(--red);
				--gradient-color2: var(--orange-neon);
				--border-right-width: #{"0.1" + $i + "5" + "rem"};
				--translateX: #{$i * 0.042 + "rem"};
				--skewX: #{$i * -0.85 + "deg"};
				--skewY: #{$h * -0.5 + "deg"};
				--rotateX: #{$h * 0.685 + "deg"};
				--rotateY: #{$j * 0.825 + "deg"};
				--originX: #{($h / 20) * 48 + "%"};
				--originY: #{($j / 20) * 52 + "%"};
			} @else {
				--gradient-degrees: #{$i * (13 - $i * 3.325) + "deg"};
				--gradient-size1: #{$size1 * 0.75};
				--gradient-size2: #{$size2 * 1.125};
				--gradient-color1: var(--green-neon);
				--gradient-color2: var(--yellow-neon);
				--border-top-width: #{"0.1" + $i + "5" + "rem"};
				--translateX: #{$i * -0.055 + "rem"};
				--skewX: #{$h * -0.8 + "deg"};
				--skewY: #{$i * -1.2 + "deg"};
				--rotateX: #{$i * 1.33 + "deg"};
				--rotateY: #{$j * 0.95 + "deg"};
				--originX: #{($h / 20) * 48 + "%"};
				--originY: #{($j / 20) * 52 + "%"};
			}
		}
	}
}
